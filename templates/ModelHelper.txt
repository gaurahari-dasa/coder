<?php

namespace App\Helpers;

use App\Models\@@@ model @@@;
// use App\Models\Contact;
// use App\Traits\ContactContext;

class @@@ model_helper @@@
{
    // use ContactContext;

    public static function listAll($sortField = null, $sortDir = null)
    {
        return @@@ model @@@
            ::orderBy($sortField ?? @@@ default_sort_field @@@, $sortDir ?? 'asc')
			// ->join('contacts', 'addresses.contact_id', '=', 'contacts.contact_id')
            // ->leftJoin('countries', 'addresses.country_id', '=', 'countries.country_id')
            ->select(
                @@@ select_data @@@
            );
    }

    public static function paginate(@@@ cntxt_id @@@)
    {
        $rowCount = request('row-count') ?? 5;
        $searchKey = request('search-key');
        $sortField = request('sort-field');
        $sortDir = request('sort');
        $items = self::listAll(Utils::snakeCase($sortField), $sortDir)@@@ cntxt_filter @@@;

        if ($searchKey) {
            $items = $items->whereAny([
                @@@ search_clause @@@
            ], 'like', "%{$searchKey}%");
        }

        return $items->paginate($rowCount)
            ->through(function ($item) {
                return [
                    @@@ pagination_data @@@
                ];
            })
            ->appends(['row-count' => $rowCount])
            ->appends(['search-key' => $searchKey])
            ->appends(['sort-field' => $sortField])
            ->appends(['sort' => $sortDir]);
    }

    public static function addEntity($validated)
    {
        return LogActivityHelper::create(function () use ($validated) {
            @@@ store_data @@@
        });
    }

    public static function updateAddress(@@@ model @@@ @@@ model_varname @@@, array $validated)
    {
        @@@ update_data @@@
    }
}
