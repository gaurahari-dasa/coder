*** SelectData: model_table, primary_key ***
'guides.guide_id',
'guides.name',
'guides.email',
'guides.mobile',
'guides.photo_path',
'guides.dob',
'guides.active',
'languages.language_id',
'languages.name as language_name',
******

*** Log Access (SelectData) ***
LogAccessHelper::log(Guide::class, $searchKey);
******

*** Search clause (Select Data) ***
'guides.name',
'guides.email',
'guides.mobile',
'guides.photo_path',
******

*** Sort by id column (SelectData) ***
if ($sortField === 'id') {
                $sortField = 'guide_id';
        }
            
******

*** Paginate (SelectData) ***
'id' => $item->guide_id,
'name' => $item->name,
'email' => $item->email,
'mobile' => $item->mobile,
'photoPath' => $item->photo_path ? Storage::url($item->photo_path) : '/img/no-photo.svg',
'dob' => Utils::formatDateJs($item->dob, DateFormatJs::OnlyDate),
'active' => $item->active,
'languageId' => $item->language_id,
'languageName' => $item->language_name,
******

*** Avatar Heading ***
<AvatarHeading class="-mt-4 sm:-mt-6 lg:-mt-8" :user="contact" backLabel="Back to what (parent) ???"
                backUrl=/contacts />
******

*** UI: addForm ***
<FormInput type="text" class="mt-4" id="name" title="Name" setFocus required
              v-model="addForm.name" :error="addForm.errors.name" />
<FormInput type="email" class="mt-4" id="email" title="Email"
              v-model="addForm.email" :error="addForm.errors.email" />
<FormInput type="text" class="mt-4" id="mobile" title="Mobile" required
              v-model="addForm.mobile" :error="addForm.errors.mobile" />
<FormFileUpload class="mt-4" id="photoPath" title="Photo"
              @pick="file => addForm.photoPath = file" :error="addForm.errors.photoPath" />
<FormInput type="date" class="mt-4" id="dob" title="DOB"
              v-model="addForm.dob" :error="addForm.errors.dob" />
<FormCheckBox class="mt-4" id="active" title="Active" v-model="addForm.active" />
<FormSelect class="mt-4" id="languageId" title="Language" :options="languages"
              v-model="addForm.languageId" :error="addForm.errors.languageId" />
******

*** UI: editForm ***
<FormInput type="text" class="mt-4" id="name" title="Name" setFocus required
              v-model="editForm.name" :error="editForm.errors.name" />
<FormInput type="email" class="mt-4" id="email" title="Email"
              v-model="editForm.email" :error="editForm.errors.email" />
<FormInput type="text" class="mt-4" id="mobile" title="Mobile" required
              v-model="editForm.mobile" :error="editForm.errors.mobile" />
<FormFileUpload class="mt-4" id="photoPath" title="Photo"
              @pick="file => editForm.photoPath = file" :error="editForm.errors.photoPath" />
<FormInput type="date" class="mt-4" id="dob" title="DOB"
              v-model="editForm.dob" :error="editForm.errors.dob" />
<FormCheckBox class="mt-4" id="active" title="Active" v-model="editForm.active" />
<FormSelect class="mt-4" id="languageId" title="Language" :options="languages"
              v-model="editForm.languageId" :error="editForm.errors.languageId" />
******

*** Grid: parameters ***
headings: ['Name', 'Email', 'Mobile', '', 'Active']
column_types: [DataColumn, DataColumn, DataColumn, ImageColumn, ActiveColumn]
fields: ['name', 'email', 'mobile', 'photoPath', 'active']
sortable_fields: ['name', 'email', 'mobile', 'photoPath']
******

*** Vue imports ***
import AvatarHeading from '../../components/AvatarHeading.vue';
import FormInput from '../../components/FormInput.vue';
import FormFileUpload from '../../components/FormFileUpload.vue';
import FormCheckBox from '../../components/FormCheckBox.vue';
import FormSelect from '../../components/FormSelect.vue';
import DataColumn from '../../components/DataColumn.vue';
import ImageColumn from '../../components/ImageColumn.vue';
import ActiveColumn from '../../components/ActiveColumn.vue';
import EntityCard from '../../components/EntityCard.vue';
import FormCancelButton from '../../components/FormCancelButton.vue';
import FormSubmitButton from '../../components/FormSubmitButton.vue';
import ToastMessage from '../../components/ToastMessage.vue';
import FormGuard from '../../components/FormGuard.vue';
******

*** Vue props ***
contactId: Number,
    contact: Object,
languages: Array,
******

*** Form: blanked ***
name: null,
email: null,
mobile: null,
photoPath: null,
dob: null,
active: false,
languageId: null,
******

*** Form: addForm ***
{
...blanked,
contactId: props.contactId,
}
******

*** Form: editForm ***
blanked
******

*** editRow ***
const datum = props.guides.data.find(v => v.id === id);
    editId = id;
editForm.name = datum.name;
editForm.email = datum.email;
editForm.mobile = datum.mobile;
editForm.dob = datum.dob;
editForm.active = !!datum.active; // cast to boolean, Haribol
editForm.languageId = datum.languageId;
******

*** Controller props ***
'contactId' => $contact->contact_id,
    'contact' => GuideHelper::contactDetails(),
'languages' => HelperClass::list()->get,
******

*** Controller: validation ***
'name' => '',
'email' => '',
'mobile' => '',
'photoPath' => '',
'dob' => '',
'active' => '',
'languageId' => '',
******

*** Store data ***
return Guide::create([
'name' => $validated['name'],
'email' => $validated['email'],
'mobile' => $validated['mobile'],
'photo_path' => $validated['photoPath'],
'dob' => Utils::parseDate($validated['dob']),
'active' => $validated['active'],
'language_id' => $validated['languageId'],
'contact_id' => request('contactId'),
]);
******

*** Update data ***
$guide->name = $validated['name'];
$guide->email = $validated['email'];
$guide->mobile = $validated['mobile'];
$guide->photo_path = $validated['photoPath'];
$guide->dob = Utils::parseDate($validated['dob']);
$guide->active = $validated['active'];
$guide->language_id = $validated['languageId'];
LogActivityHelper::save($guide);
******

*** Model: fillable ***
'name',
'email',
'mobile',
'photo_path',
'dob',
'active',
'language_id',
'contact_id',
******

