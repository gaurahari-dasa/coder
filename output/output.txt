*** SelectData: guides, guide_id ***
'guides.guide_id',
'guides.name',
'guides.email',
'guides.mobile',
'guides.photo_path',
'guides.active',
'languages.language_id',
'languages.name as language_name',
******

*** Paginate (SelectData) ***
'id' => $item->guide_id,
'name' => $item->name,
'email' => $item->email,
'mobile' => $item->mobile,
'photoPath' => Storage::url($item->photo_path),
'active' => $item->active,
'languageId' => $item->language_id,
'languageName' => $item->language_name,
******

*** Search clause (Select Data) ***
'guides.name',
'guides.email',
'guides.mobile',
'guides.photo_path',
******

*** Sort by id column (SelectData) ***
******

*** Pagination URLs ***

for (const guide of props.guides.data) {
    data.value.push({ ...guide });
}

const prevUrl = props.guides.prev_page_url;
const nextUrl = props.guides.next_page_url;

******

*** Form: addForm ***
name: null,
email: null,
mobile: null,
photoPath: null,
active: null,
languageId: null,
******

*** Form: editForm ***
id: null,
name: null,
email: null,
mobile: null,
photoPath: null,
active: null,
languageId: null,
******

*** editRow ***

    editForm.id = id;
    const datum = data.value.find(v => v.id === id);
        
editForm.name = datum.name;
editForm.email = datum.email;
editForm.mobile = datum.mobile;
editForm.active = !!datum.active; // cast to boolean, Haribol
editForm.languageId = datum.languageId;
******

*** UI: addForm ***
<FormInput type="text" class="mt-4" id="name" title="Name" setFocus required
              v-model="addForm.name" :error="addForm.errors.name" />
<FormInput type="email" class="mt-4" id="email" title="Email"
              v-model="addForm.email" :error="addForm.errors.email" />
<FormInput type="text" class="mt-4" id="mobile" title="Mobile" required
              v-model="addForm.mobile" :error="addForm.errors.mobile" />
<FormFileUpload class="mt-4" id="photoPath" title="Photo"
              @pick="file => addForm.photoPath = file" :error="addForm.errors.photoPath" />
<FormCheckBox class="mt-4" id="active" title="Active" v-model="addForm.active" />
<FormSelect class="mt-4" id="languageId" title="Language" :options="languages"
              v-model="addForm.languageId" :error="addForm.errors.languageId" />
******

*** UI: editForm ***
<FormInput type="text" class="mt-4" id="name" title="Name" setFocus required
              v-model="editForm.name" :error="editForm.errors.name" />
<FormInput type="email" class="mt-4" id="email" title="Email"
              v-model="editForm.email" :error="editForm.errors.email" />
<FormInput type="text" class="mt-4" id="mobile" title="Mobile" required
              v-model="editForm.mobile" :error="editForm.errors.mobile" />
<FormFileUpload class="mt-4" id="photoPath" title="Photo"
              @pick="file => editForm.photoPath = file" :error="editForm.errors.photoPath" />
<FormCheckBox class="mt-4" id="active" title="Active" v-model="editForm.active" />
<FormSelect class="mt-4" id="languageId" title="Language" :options="languages"
              v-model="editForm.languageId" :error="editForm.errors.languageId" />
******

*** Vue props ***
languages: Array,
******

*** Controller props ***
'languages' => HelperClass::list()->get,
******

*** Controller: validation ***
name => '',
email => '',
mobile => '',
photoPath => '',
active => '',
languageId => '',
******

*** Store data ***
return Guide::create([
'name' => $validated['name'],
'email' => $validated['email'],
'mobile' => $validated['mobile'],
'photo_path' => $validated['photoPath'],
'active' => $validated['active'],
'language_id' => $validated['languageId'],
]);
******

*** Update data ***
$guide = Guide::find(request('id'));
$guide->name = $validated['name'];
$guide->email = $validated['email'];
$guide->mobile = $validated['mobile'];
$guide->photo_path = $validated['photoPath'];
$guide->active = $validated['active'];
$guide->language_id = $validated['languageId'];
LogActivityHelper::save($guide);
return $guide;
******

*** Model: fillable ***
'name',
'email',
'mobile',
'photo_path',
'active',
******

